version: "3.7"

services:
  consul:
    image: consul:latest
    volumes:
      - ./consul/consul.json:/etc/consul/consul.json
    command: consul agent -config-file=/etc/consul/consul.json -server -client 0.0.0.0 -ui -bootstrap-expect=1 -data-dir=/consul/data -datacenter=fxtrading
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    networks:
      - back
    labels:
      - "traefik.backend=consul"
      - "traefik.port=8500"
      - "traefik.frontend.rule=Host:consul.trading.localhost"
      - "traefik.docker.network=back"

  traefik:
    image: traefik:1.7
    command: --api --docker
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    labels:
      - "traefik.backend=traefik"
      - "traefik.port=8080"
      - "traefik.frontend.rule=Host:proxy.trading.localhost"
      - "traefik.docker.network=back"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik.toml:/traefik.toml
      - ./traefik/acme.json:/acme.json
    container_name: traefik
    networks:
      back:
        aliases:
          - "trading.localhost"
          - "consul.trading.localhost"
      front:

  scope:
    image: weaveworks/scope:latest
    hostname: weave-scope
    container_name: "scope"
    pid: "host"
    privileged: true
    ports:
      - "4040:4040"
    expose:
      - "4040"
    labels:
      - "works.weave.role=system"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:rw"
    command:
      - "--probe.docker=true"
    networks:
      - monitoring
      - front
      - back

  swagger:
    environment:
      URLS:
        '[{ url: "http://position.trading.localhost/swagger.json", name: "Positions" },
        { url: "http://localhost:8780/swagger.json", name: "Order" },
        ]'
    image: swaggerapi/swagger-ui
    labels:
      - "traefik.backend=swagger"
      - "traefik.port=8090"
      - "traefik.frontend.rule=Host:swagger.trading.localhost"
      - "traefik.docker.network=back"
    ports:
      - "8090:8080"
    networks:
      - back

  postgres:
    build: postgresql
    container_name: postgresql
    volumes:
      - "postgres-data:/var/lib/postgresql/data"
    expose:
      - "5432"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=admin
      - POSTGRES_USER=postgres
      - POSTGRES_DB=tradingDB
    networks:
      - back

volumes:
  postgres-data:

networks:
  front:
    external: true
  back:
    external: true
  monitoring:
    external: true
